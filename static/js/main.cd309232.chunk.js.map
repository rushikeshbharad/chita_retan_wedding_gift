{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","step","setStep","Date","date","setDate","otp","setOtp","otpSent","setOtpSent","console","log","className","1","selected","onChange","onClick","a","getDate","getMonth","getFullYear","createOtp","Math","round","random","2","value","split","join","e","target","replace","placeholder","3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAmJeA,G,YAjGH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEQF,mBAAS,IAAIG,KAAK,eAF1B,mBAETC,EAFS,KAEHC,EAFG,OAGML,mBAAS,IAHf,mBAGTM,EAHS,KAGJC,EAHI,OAIcP,mBAAS,IAJvB,mBAITQ,EAJS,KAIAC,EAJA,KAQhB,OAFAC,QAAQC,IAAI,mBAAoBH,GAG9B,qBAAKI,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACG,CACCC,EACE,qCACE,oDACqB,qDAErB,mBAAGD,UAAU,WAAb,+GAKA,cAAC,IAAD,CAAYE,SAAUV,EAAMW,SAAUV,IACtC,sBACEO,UAAU,WACVI,QAAO,sBAAE,4BAAAC,EAAA,sDAEc,KAAnBb,EAAKc,WACe,KAApBd,EAAKe,YACkB,OAAvBf,EAAKgB,gBAECC,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAClCf,EAAWY,GACXnB,EAAQ,IARH,2CAFX,sBAsBJuB,EACE,qCACE,0CAGA,mBAAGb,UAAU,WAAb,8OASA,uBACEc,MAAOpB,EAAIqB,MAAM,IAAIC,KAAK,KAC1Bb,SAAU,SAACc,GAAD,OAAOtB,EAAOsB,EAAEC,OAAOJ,MAAMK,QAAQ,KAAM,MACrDC,YAAY,kBAEd,sBACEpB,UAAU,WACVI,QAAS,YACFV,KAASE,GACZN,EAAQ,IAJd,uBAcJ+B,EACE,qCACE,6DAGA,mBAAGrB,UAAU,WAAb,2KAQJX,SCjIKiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cd309232.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nconst sendMail = (to_email, name, otp = \"Zala\") => {\n  const data = {\n    'service_id': 'service_5a3oa5r',\n    'template_id': 'template_l1s8cte',\n    'user_id': 'user_RdWW2nztkB00yaeej5tv8',\n    'template_params': {\n      'to_email': to_email,\n      'name': name,\n      'otp': otp\n    }\n  }\n\n  return new Promise((resolve) => {\n    fetch(\"https://api.emailjs.com/api/v1.0/email/send\", {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((r) => r.text())\n      .then(() => {\n        resolve();\n      })\n  })\n}\n\nconst sendSMS = (number, otp = \"Zala\") => {\n  return new Promise((resolve) => {\n    fetch('https://textbelt.com/text', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        phone: number,\n        message: `OTP for claiming the wedding gift is: ${otp}`,\n        key: 'textbelt',\n      }),\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      resolve(data);\n    });\n  });\n}\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [date, setDate] = useState(new Date(\"2020-01-01\"));\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(\"\");\n  // TODO: remove below log\n  console.log(\"otpSent haag => \", otpSent);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {{\n          1: (\n            <>\n              <p>\n                Happy married life <strong>ðŸ‘«</strong>\n              </p>\n              <p className=\"subtitle\">\n                {`Where is the gift?\n                Simple!\n                Select the wedding date and claim it`}\n              </p>\n              <DatePicker selected={date} onChange={setDate} />\n              <span\n                className=\"App-link\"\n                onClick={async () => {\n                  if (\n                    date.getDate() === 27 &&\n                    date.getMonth() === 10 &&\n                    date.getFullYear() === 2020\n                  ) {\n                    const createOtp = Math.round(Math.random() * 10000000);\n                    setOtpSent(createOtp);\n                    setStep(2);\n                    // TODO: Remove below 3 comments\n                    // sendMail(\"nikumbhrita@gmail.com\", \"Rita\", createOtp);\n                    // sendMail(\"chetanvc991@gmail.com\", \"Chetan\", createOtp);\n                    // sendSMS(\"+919405938483\", createOtp);\n                  }\n                }}\n              >\n                Claim\n              </span>\n            </>\n          ),\n          2: (\n            <>\n              <p>\n                Enter OTP\n              </p>\n              <p className=\"subtitle\">\n                {`\n                One time password has been sent to\n                - ni*******ta@gmail.com,\n                - ch*******91@gmail.com,\n                - 94******83\n                \n                DO NOT RELOAD THE PAGE`}\n              </p>\n              <input\n                value={otp.split(\"\").join(\"-\")}\n                onChange={(e) => setOtp(e.target.value.replace(/-/g, \"\"))}\n                placeholder=\"0-0-0-0-0-0-0\"\n              />\n              <span\n                className=\"App-link\"\n                onClick={() => {\n                  if (+otp === +otpSent) {\n                    setStep(3);\n                    // TODO: remove below comment\n                    // sendMail(\"rushicbharad@gmail.com\", \"Rushi\");\n                  }\n                }}\n              >\n                Submit\n              </span>\n            </>\n          ),\n          3: (\n            <>\n              <p>\n                Congratulations ðŸŽ‰\n              </p>\n              <p className=\"subtitle\">\n                {`Honeymoon fund has been initialized!\n                The amount will be credited\n                to ICICI 04********55\n                within 24 hours`}\n              </p>\n            </>\n          )\n        }[step]}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}